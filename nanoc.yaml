# A list of file extensions that Nanoc will consider to be textual rather than
# binary. If an item with an extension not in this list is found,  the file
# will be considered as binary.
text_extensions: [ 'adoc', 'asciidoc', 'atom', 'coffee', 'css', 'erb', 'haml',
                   'handlebars', 'hb', 'htm', 'html', 'js', 'less', 'markdown',
                   'md', 'ms', 'mustache', 'php', 'rb', 'rdoc', 'sass', 'scss',
                   'slim', 'tex', 'txt', 'xhtml', 'xml' ]

# The path to the directory where all generated files will be written to. This
# can be an absolute path starting with a slash, but it can also be path
# relative to the site directory.
output_dir: output

# Whether or not to generate a diff of the compiled content when compiling a
# site. The diff will contain the differences between the compiled content
# before and after the last site compilation.
enable_output_diff: true

prune:
  # Whether to automatically remove files not managed by Nanoc from the output
  # directory.
  auto_prune: true

# Configuration for the “check” command, which run unit tests on the site.
checks:
  # Configuration for the “internal_links” checker, which checks whether all
  # internal links are valid.
  internal_links:
    # A list of patterns, specified as regular expressions, to exclude from the check.
    # If an internal link matches this pattern, the validity check will be skipped.
    # E.g.:
    #   exclude: ['^/server_status']
    exclude: ['^/player/manual/', '^/player/doxydoc/', '^/play/', '^/videos/', '^/discord/' ]

  # Configuration for the “external_links” checker, which checks whether all
  # external links are valid.
  external_links:
    # A list of patterns, specified as regular expressions, to exclude from the check.
    # If an external link matches this pattern, the validity check will be skipped.
    # E.g.:
    #   exclude: ['^http://example.com$']
    exclude:
      - '^https?://docs\.github\.com/?'
      - '^https?://twitter\.com/?'
      - '^https?://(www\.)?facebook\.com/?'
      - '^https?://(.*?\.)?instagram\.com/?'
    # A list of file patterns, specified as regular expressions, to exclude from the check.
    # If a file matches this pattern, the links from this file will not be checked.
    # E.g.:
    #   exclude_files: ['blog/page']
    exclude_files: []

# The base url for sitemaps/rss et al.
base_url: https://easyrpg.org

environments:
  development:
    base_url: http://localhost:3000
  production:
    prod: true
#  pr:
  netlify:
    # url placeholder will be overwritten by build script
    base_url: DEPLOY_PRIME_URL
